security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # Utilisé pour recharger l'utilisateur depuis la session (switch_user, etc.)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
            logout:
                path: app_logout
                # Redirection après déconnexion
                target: app_book_index

    access_control:
        - { path: ^/admin, roles: IS_AUTHENTICATED }

    # La hiérarchie des rôles est définie ici pour être appliquée dans tous les environnements.
    role_hierarchy:
        ROLE_USER: ~
        ROLE_MODERATEUR: [ROLE_USER]
        ROLE_AJOUT_DE_LIVRE: [ROLE_USER]
        ROLE_EDITION_DE_LIVRE: [ROLE_AJOUT_DE_LIVRE]
        ROLE_ADMIN: [ROLE_MODERATEUR, ROLE_EDITION_DE_LIVRE]

when@test:
    security:
        password_hashers:
            # Configuration allégée pour les tests
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
